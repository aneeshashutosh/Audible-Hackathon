var DecibelMeter=function(e,t,n,o){function i(e,n,o){function i(t){var i={};i.stream=t,i.context=new AudioContext,i.source=i.context.createMediaStreamSource(t),i.analyser=i.context.createAnalyser(),i.analyser.smoothingTimeConstant=.5,i.analyser.frequencyBinCount=16,i.lastSample=new Uint8Array(1),n.connection=i,n.connected=!0,o&&o.call(n,n,e),a&&n.handle.sourceChange&&r(n,"source-change",[e,s,n]),n.handle.connect&&r(n,"connect",[n,e])}function c(){alert("Error connecting to source")}var s=n.source,a=null!==s,u={audio:{optional:[{sourceId:e.id}]}};n.source=e,t.getUserMedia(u,i,c)}function r(e,t,n){var o=e.handle[t],i=o.length;if(0!==i)for(var r=0;i>r&&!0!==o[r].apply(e,n);r++);}function c(e,t){this.id=e,this.opts=t,this.source=null,this.listening=!1,this.connection=null,this.connected=!1,this.handle={ready:t.ready?[t.ready]:[],sample:t.sample?[t.sample]:[],connect:t.connect?[t.connect]:[],disconnect:t.disconnect?[t.disconnect]:[],"source-change":t.sourceChange?[t.sourceChange]:[],listen:t.listen?[t.listen]:[],"stop-listening":t.stopListeing?[t.stopListening]:[]},this.startLoop()}if(t.getUserMedia||(t.getUserMedia=t.webkitGetUserMedia||t.mozGetUserMedia||t.msGetUserMedia),!t.getUserMedia)throw new Error("DecibelMeter: getUserMedia not supported");if(e.AudioContext=e.AudioContext||e.webkitAudioContext,!e.AudioContext)throw new Error("DecibelMeter: AudioContext not supported");if(!e.MediaStreamTrack)throw new Error("DecibelMeter: MediaStreamTrack not supported");if(!e.MediaStreamTrack.getSources)throw new Error("DecibelMeter: MediaStreamTrack.getSources() not supported");var s=[],a={},u=!1;MediaStreamTrack.getSources(function(e){e.forEach(function(e){"audio"===e.kind&&(s.push(e),a[e.id]=e)}),u=!0,l.forEach(function(e){r(e,"ready",[e,s])})}),c.prototype.getSources=function(){return s},c.prototype.connect=function(e,t){if(!u)throw new Error("DecibelMeter: Audio sources not ready");if(!e)throw new Error("DecibelMeter: No audio source specified");if(("string"==typeof e||"number"==typeof e)&&(e=a[e],!e))throw new Error("DecibelMeter: Attempted to select invalid audio source");if(this.source!==e)return i(e,this,t),this},c.prototype.disconnect=function(){return null===this.connection?this:(this.stopListening(),this.connection.stream.stop(),this.connection.stream=null,this.connection=null,this.source=null,this.connected=!1,r(this,"disconnect",[this]),this)},c.prototype.listen=function(){if(!this.listening){if(null===this.source)throw new Error("DecibelMeter: No source selected");if(null===this.connection)throw new Error("DecibelMeter: Not connected to source");this.connection.source.connect(this.connection.analyser),this.listening=!0,r(this,"listen",[this])}},c.prototype.stopListening=function(){if(this.listening){if(null===this.source)throw new Error("DecibelMeter: No source selected");if(null===this.connection)throw new Error("DecibelMeter: Not connected to source");this.connection.source.disconnect(this.connection.analyser),this.listening=!1,r(this,"stop-listening",[this])}},c.prototype.startLoop=function(){function e(){if(t.listening&&t.handle.sample){t.connection.analyser.getByteFrequencyData(t.connection.lastSample);var n=t.connection.lastSample[0],o=n/255,i=t.connection.analyser.minDecibels+(t.connection.analyser.maxDecibels-t.connection.analyser.minDecibels)*o;r(t,"sample",[i,o,n])}requestAnimationFrame(e)}var t=this;e()},c.prototype.on=function(e,t){return this.handle[e]===o?this:(this.handle[e].push(t),this)};var l=[],h={};return{create:function(e,t){e=e||["db",(new Date).getTime(),Math.random()].join("-");var n=new c(e,t||{});return h[e]=n,l.push(n),n},getMeterById:function(e){return h[e]||null},getMeters:function(){return l}}}(window,navigator,document);
